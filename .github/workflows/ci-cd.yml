name: Build and Deploy to NCP
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 수동 실행 트리거 추가

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 소스코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
      # GitHub Actions VM 환경의 IP GET
      - name: Get Public IP
        id: ip
        uses: haythem/public-ip@v1.3
      # JDK 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      # NCP ACG GitHub Actions ip add
      - name: Setting NCP CLI & Credentials
        run: |
          cd ~
          wget --timeout=3000 --tries=3 --verbose https://www.ncloud.com/api/support/download/5/65
          unzip 65
          mkdir ~/.ncloud
          echo -e "[DEFAULT]\nncloud_access_key_id = ${{ secrets.NCP_ACCESS_KEY }}\nncloud_secret_access_key = ${{ secrets.NCP_SECRET_KEY }}\nncloud_api_url = ${{ secrets.NCP_API_URL }}" >> ~/.ncloud/configure
      - name: Add Github Action Ip to Security group
        run: |
          chmod -R 777 ~/cli_linux
          cd ~/cli_linux
          
          echo "Adding IP to Security Group:"
          echo "Public IP: ${{ steps.ip.outputs.ipv4 }}"
          echo "VPC No: ${{ secrets.NCP_VPC_NO }}"
          echo "DB ACG No: ${{ secrets.NCP_DB_AGC_NO }}"
          echo "Web ACG No: ${{ secrets.NCP_WEB_AGC_NO }}"
          
          ./ncloud vserver addAccessControlGroupInboundRule --regionCode KR --vpcNo ${{ secrets.NCP_VPC_NO }} --accessControlGroupNo ${{ secrets.NCP_DB_AGC_NO }} --accessControlGroupRuleList "protocolTypeCode=TCP,ipBlock='${{ steps.ip.outputs.ipv4 }}/32',portRange='${{ secrets.NCP_DB_PORT }}'"
          ./ncloud vserver addAccessControlGroupInboundRule --regionCode KR --vpcNo ${{ secrets.NCP_VPC_NO }} --accessControlGroupNo ${{ secrets.NCP_WEB_AGC_NO }} --accessControlGroupRuleList "protocolTypeCode=TCP,ipBlock='${{ steps.ip.outputs.ipv4 }}/32',portRange='${{ secrets.NCP_SSH_PORT }}'"

      # Application YML 파일 생성
      - name: Make application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_AUTH_YML }}" | base64 --decode > src/main/resources/application-auth.yml
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
          find src
        shell: bash
      # Gradle 권한 부여
      - name: Grant permission for gradlew
        run: chmod +x ./gradlew
      # 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -i
      # 빌드한 jar 파일을 도커 이미지로 빌드하고 도커 허브에 푸시
      - name: Build and push Docker image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dive-in .
          docker push ${{ secrets.DOCKER_USERNAME }}/dive-in

  deploy:
    # needs를 통해 build job이 수행 성공시에 작업되도록 설정
    needs: build
    runs-on: ubuntu-latest
    steps:
      # NCP 서버에 SSH 접속하여 Docker 이미지 실행
      - name: Deploy to NCP Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.NCP_WEB_SERVER_IP }}  # NCP 서버 IP
          username: ${{ secrets.NCP_SSH_USERNAME }}  # SSH 사용자 이름
          password: ${{ secrets.NCP_SSH_PASSWORD }}  # SSH 비밀번호
          port: ${{ secrets.NCP_SSH_PORT }}  # SSH 포트
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker network create web-network || true
            docker stop diveincontainer || true
            docker rm -f diveincontainer || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/dive-in
            docker run -d -p 8080:8080 --network web-network --name diveincontainer ${{ secrets.DOCKER_USERNAME }}/dive-in


      - name: Remove Github Action Ip to Security group
        run: |
          chmod -R 777 ~/cli_linux
          cd ~/cli_linux
          ./ncloud vserver removeAccessControlGroupInboundRule --regionCode KR --vpcNo ${{ secrets.NCP_VPC_NO }} --accessControlGroupNo ${{ secrets.NCP_DB_AGC_NO }} --accessControlGroupRuleList "protocolTypeCode='TCP', ipBlock='${{ steps.ip.outputs.ipv4 }}/32', portRange='${{ secrets.NCP_DB_PORT }}'"
          ./ncloud vserver removeAccessControlGroupInboundRule --regionCode KR --vpcNo ${{ secrets.NCP_VPC_NO }} --accessControlGroupNo ${{ secrets.NCP_WEB_AGC_NO }} --accessControlGroupRuleList "protocolTypeCode='TCP', ipBlock='${{ steps.ip.outputs.ipv4 }}/32', portRange='${{ secrets.NCP_SSH_PORT }}'"
